var W=Object.create;var N=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,G=Object.prototype.hasOwnProperty;var K=(e,r,t,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of k(r))!G.call(e,o)&&o!==t&&N(e,o,{get:()=>r[o],enumerable:!(n=A(r,o))||n.enumerable});return e};var s=(e,r,t)=>(t=e!=null?W(L(e)):{},K(r||!e||!e.__esModule?N(t,"default",{value:e,enumerable:!0}):t,e));var he=require("dotenv/config");var F=s(require("mongoose")),f=s(require("fastify"));async function w(){try{await F.default.connect(process.env.MONGO_URI),(0,f.default)().log.info("Connected to database")}catch(e){(0,f.default)().log.error(e,"Error connecting to Database"),process.exit(1)}}var ye=require("dotenv/config"),J=s(require("fastify"));var p=s(require("mongoose")),h=s(require("bcrypt")),x=new p.default.Schema({name:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0}},{timestamps:!0});x.pre("save",async function(e){if(this.isModified("password")||this.isNew)return this.password=await h.hash(this.password,13),e()});var m=p.default.model("User",x);async function q(e){return m.create(e)}async function I(e){return m.findOne({email:e})}var S=require("bcrypt"),y=s(require("fastify"));async function U(e,r){try{let t=e.body,{_id:n,name:o,email:a}=await q(t),c={_id:n,name:o,email:a};r.code(201).send({message:"Registration Successful",accessToken:e.jwt.sign(c)})}catch(t){return(0,y.default)().log.error(t,"Error Registering User"),r.code(500).send(t)}}async function b(e,r){try{let{email:t,password:n}=e.body,o=await I(t);if(!o)return r.status(401).send({message:"Invalid Credentials"});if(!(0,S.compareSync)(n,o.password))return r.status(401).send({message:"Invalid Credentials"});let{_id:a,name:c}=o,P={_id:a,email:t,name:c};return{accessToken:e.jwt.sign(P)}}catch(t){return(0,y.default)().log.error(t,"Error Login"),r.code(500).send(t)}}async function V(e){e.post("/register",U),e.post("/login",b)}var B=V;var M=s(require("@fastify/jwt"));var d=s(require("fastify"));var u=s(require("mongoose")),$=new u.default.Schema({user:{type:u.default.Schema.Types.ObjectId,ref:"User",required:!0},title:{type:String,required:!0},content:{type:String,required:!0}},{timestamps:!0}),i=u.default.model("Note",$);function D(e){return i.create(e)}function H(e){return i.find({user:e}).populate("user","_id email name")}function E(e,r){return i.findByIdAndUpdate(e,r,{new:!0})}function l(e){return i.findById(e)}function T(e){return i.findByIdAndDelete(e)}async function C(e,r){try{let{title:t,content:n}=e.body,o=e.user._id,a=await D({title:t,content:n,user:o});r.code(201).send(a)}catch(t){return(0,d.default)().log.error(t,"Error Creating Note"),r.code(500).send(t)}}async function _(e,r){try{let t=e.user._id;return H(t)}catch(t){return(0,d.default)().log.error(t,"Error Fetching Notes"),r.code(500).send(t)}}async function j(e,r){try{let{id:t}=e.params,{title:n,content:o}=e.body,a=e.user._id;if(!await l(t))return r.code(404).send({message:"Note not found"});let c=await E(t,{title:n,content:o,user:a});r.code(200).send(c)}catch(t){return(0,d.default)().log.error(t,"Error Updating Note"),r.code(500).send(t)}}async function v(e,r){try{let{id:t}=e.params;if(!await l(t))return r.code(404).send({message:"Note not found"});await T(t),r.code(200).send({message:"Note Deleted Successfully"})}catch(t){return(0,d.default)().log.error(t,"Error Deleting Note"),r.code(500).send(t)}}async function z(e){e.post("/add",{onRequest:[e.authenticate]},C),e.get("/all",{onRequest:[e.authenticate]},_),e.put("/update/:id",{onRequest:[e.authenticate]},j),e.delete("/delete/:id",{onRequest:[e.authenticate]},v)}var O=z;function g(){let e=(0,J.default)({logger:{level:"info",transport:{target:"pino-pretty"}}});return e.register(M.default,{secret:process.env.JWT_SECRET}),e.decorate("authenticate",async(r,t)=>{try{await r.jwtVerify()}catch(n){return t.send(n)}}),e.addHook("preHandler",(r,t,n)=>(r.jwt=e.jwt,n())),e.get("/",async(r,t)=>{t.send({status:"OK",port:"3100"})}),e.register(B,{prefix:"api/users"}),e.register(O,{prefix:"api/notes"}),e}var R=g();R.listen({port:3100},function(e,r){e&&(R.log.error(e),process.exit(1)),w(),R.log.info(`Server is now listening on ${r}`)});
//# sourceMappingURL=index.js.map
